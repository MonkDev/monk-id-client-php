<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a10" title="Monk ID PHP">
  <file path="Id.php" hash="c3180201061de960766fa3b604b82a28" package="Default">
    <docblock line="3">
      <description><![CDATA[Global Monk namespace.]]></description>
      <long-description><![CDATA[]]></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Monk" line="15" package="Default">
      <extends/>
      <name>Id</name>
      <full_name>\Monk\Id</full_name>
      <docblock line="8">
        <description><![CDATA[Integrate Monk ID on the server-side by accessing payloads from the
client-side JavaScript.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="8" name="author" description="Monk Development, Inc."/>
        <tag line="8" name="copyright" description="2013 Monk Development, Inc."/>
      </docblock>
      <constant namespace="Monk" line="20" package="Default">
        <name>COOKIE_NAME</name>
        <full_name>COOKIE_NAME</full_name>
        <value><![CDATA['_monkIdPayload']]></value>
        <docblock line="17">
          <description><![CDATA[Name of the cookie that (optionally) stores the payload.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="52" package="Default">
        <name>loadConfig</name>
        <full_name>loadConfig</full_name>
        <docblock line="42">
          <description><![CDATA[Load an INI config file for a specific environment.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="Path of INI config file to load. Leave `null` to read from environment's `MONK_ID_CONFIG` value." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="Environment section to use. Leave `null` to read from environment's `MONK_ID_ENV` value. Defaults to `development`." type="string" variable="$environment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="Loaded config values." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="throws" description="If the file doesn't exist or can't be read." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$path</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$environment</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="95" package="Default">
        <name>config</name>
        <full_name>config</full_name>
        <docblock line="86">
          <description><![CDATA[Get or set a config value.]]></description>
          <long-description><![CDATA[<p>Attempts to load the config if it hasn't
already been loaded.</p>]]></long-description>
          <tag line="86" name="param" description="Name of config value." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="param" description="New config value. Leave unset to get a config value." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="86" name="return" description="Config value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="86" name="throws" description="If the config can't be loaded or is invalid." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$value</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="165" package="Default">
        <name>loadPayload</name>
        <full_name>loadPayload</full_name>
        <docblock line="156">
          <description><![CDATA[Load a payload from the client-side.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="Encoded payload or cookies array to automatically load the payload from. Leave `null` to read from global `$_COOKIE`." type="string|array" variable="$encodedPayload">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="return" description="Decoded and verified payload. Empty if there's no payload or it fails verification." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$encodedPayload</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="230" package="Default">
        <name>userId</name>
        <full_name>userId</full_name>
        <docblock line="224">
          <description><![CDATA[Get the signed in user's UUID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="224" name="return" description="UUID if signed in user or `null` if no signed in user." type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="240" package="Default">
        <name>userEmail</name>
        <full_name>userEmail</full_name>
        <docblock line="234">
          <description><![CDATA[Get the signed in user's email address.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="234" name="return" description="Email address if signed in user or `null` if no signed in user." type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="249" package="Default">
        <name>signedIn</name>
        <full_name>signedIn</full_name>
        <docblock line="244">
          <description><![CDATA[Check whether there's a signed in user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="244" name="return" description="Whether there's a signed in user." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="Monk" full_name="Monk"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
