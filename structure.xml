<?xml version="1.0" encoding="utf-8"?>
<project title="Monk ID PHP" version="2.7.0">
  <partials/>
  <file path="Id.php" generated-path="Id.html" hash="cc806af9ef33d60158fa2d788bf3a505" package="Default">
    <docblock line="0">
      <description>Global Monk namespace.</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Monk" line="14" package="Default">
      <extends/>
      <name>Id</name>
      <full_name>\Monk\Id</full_name>
      <docblock line="14">
        <description>Integrate Monk ID authentication and single sign-on for apps and websites
on the server-side.</description>
        <long-description></long-description>
        <tag name="author" line="14" description="Monk Development, Inc."/>
        <tag name="copyright" line="14" description="2014 Monk Development, Inc."/>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <constant namespace="Monk" line="19" package="Default">
        <name>COOKIE_NAME</name>
        <full_name>\Monk\Id::COOKIE_NAME</full_name>
        <value>'_monkIdPayload'</value>
        <docblock line="19">
          <description>Name of the cookie that (optionally) stores the payload.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="55" package="Default">
        <name>loadConfig</name>
        <full_name>\Monk\Id::loadConfig()</full_name>
        <docblock line="55">
          <description>Load an INI config file for a specific environment.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;Path of INI config file to load. Leave &lt;code&gt;null&lt;/code&gt; to&#10;read from environment's &lt;code&gt;MONK_ID_CONFIG&lt;/code&gt; value.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Environment section to use. Leave &lt;code&gt;null&lt;/code&gt; to&#10;read from environment's &lt;code&gt;MONK_ID_ENV&lt;/code&gt; value. Defaults to &lt;code&gt;development&lt;/code&gt;.&lt;/p&gt;" type="string" variable="$environment">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="Loaded config values." type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="55" description="If the file doesn't exist or can't be read." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$environment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="98" package="Default">
        <name>config</name>
        <full_name>\Monk\Id::config()</full_name>
        <docblock line="98">
          <description>Get or set a config value. Attempts to load the config if it hasn't
already been loaded.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;Name of config value.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;New config value. Leave unset to get a config value.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="98" description="Config value." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="98" description="If the config can't be loaded or is invalid." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="206" package="Default">
        <name>loadPayload</name>
        <full_name>\Monk\Id::loadPayload()</full_name>
        <docblock line="206">
          <description>Load a payload from the client-side.</description>
          <long-description></long-description>
          <tag name="param" line="206" description="&lt;p&gt;Encoded payload or cookies array to&#10;automatically load the payload from. Leave &lt;code&gt;null&lt;/code&gt; to read from global&#10;&lt;code&gt;$_COOKIE&lt;/code&gt;.&lt;/p&gt;" type="string|array" variable="$encodedPayload">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="206" description="Decoded and verified payload. Empty if there's no payload&#10;  or it fails verification." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$encodedPayload</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="263" package="Default">
        <name>userId</name>
        <full_name>\Monk\Id::userId()</full_name>
        <docblock line="263">
          <description>Get the signed in user's UUID.</description>
          <long-description></long-description>
          <tag name="return" line="263" description="UUID if signed in user or `null` if no signed in&#10;  user." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="274" package="Default">
        <name>userEmail</name>
        <full_name>\Monk\Id::userEmail()</full_name>
        <docblock line="274">
          <description>Get the signed in user's email address.</description>
          <long-description></long-description>
          <tag name="return" line="274" description="Email address if signed in user or `null` if no&#10;  signed in user." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Monk" line="284" package="Default">
        <name>signedIn</name>
        <full_name>\Monk\Id::signedIn()</full_name>
        <docblock line="284">
          <description>Check whether there's a signed in user.</description>
          <long-description></long-description>
          <tag name="return" line="284" description="Whether there's a signed in user." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers/>
    <source>eJytWNtu2zgQffdXTIEAtgM32RbdfUjXSIskDYy2SbFFuw/ZwKYl2mYjk6ooJzF28+87vEmkLr609UNiWeRw5syZG/88TRdp5/jwsAOHcJmIKUngo+B3wMmSypRE9AjfHHeKR/32dcdtGfGczjOSm99hdA5klS8oz1lEciY4EB6DZHyeUPw358/xp5nIgKSp1O8e6FSynEolDN/hXpA0u6fZc8lifbh680ZJxW340eec03uaiHSJBw1Qh+hIL4pEus7YfJHDy99evGpfedyJEiIljOLOvx0lUxujPodwhYaCmGlFIiHuGMWvJIeeSJU9JEnWfZC5yKjUa1KyTgSJj+z+Y/0/ElzmcHZ9/X50Mb56+/EChtAdL1GfUfzJbOgihpWjzwSfsTnck2RFpRPoXr65J4halpF1cFKasXuFvswR7ggOIi2jLvucRiKmsYYcwWUzhg8V3fc8yu6un/UpQ8x5biDUQM8ysYQpRRoAQ2QI0gMloTbIgSSBmOREa7ak6OUYf8yoE2ZOq6morDkTaAmZ09Gci2JDqOtsxSNNw/FY+yRbRXmvr5cYzz/VtP+ANqEyMLoagUETZgzZq1kLMqURghcB5fcsE1zxqqZcSjKyBFQ9UxYjUPkCPqk/yKuq2FyA9gF8oOSewoSvkmSCvzphABlFhTSC3pldCZOP11fvx6Pz8dn11bvR5cQQ56hNC28zXHjfJTUIoSIrSX9Gj4urr04J5NuMrJJcKrGTuIzBSalfRvNVxg3RNOpIiKgpBOBNvsjEg4R/Lh4jqsMQRiZCNYSxoJJ3c6CPDKMO3RQR9TilWuUwMtPVNEHvWQ4X9FAuMOHXM+4aggJgEMJmfvTpoz5ug/l/av+fwJzmuLnXDd3U7b8ud4bCg8fT8LEuDtH+YVldzyMuEWkhFv8hpoZM0jHjbKwgNqAMAOOH+mcWy+23G/+cW0+wpMns5EQnnrXD2Wzpe6ssI8zimvDXLQH7VUs1WZo4Bi1salEkyej3FcuQXS2Z1QaKIaI7tjEZF6RVQCgO4msWb+Ep48GqxmRaEDGAKNSomX1sBr1nDkvvd/XR6gCnD55GvS4XDqREB53PoiegiaS+zJsuluoxi7u3O0ufmB2TIJp3OQVTEeK770lm14bTagRT3mtj0yXVKURSj0w2p73Nc7pMTU5T0NkeQS9BY1iuWIeZx4kiico/a0xElFust5WKO7ouOpDg8OqGJXtEQh/ol3CFyISqmiS+4soM1HZet6bKaCPwrHFJa/q1Eot8a4xU+DHZwvvm/BvZnID2D5xVzXw/PlaHTwWmWA0FZsVMNwz4KCWNB9p1SjkLxTV+zx6YpAPlJHzwRZXZwlhQOGoAxHi7dLaD0QfHBqCyY8xXyzHJ5rLXh+EQXlZJXIYxQz3zXpDl+pijw7R3YvJRzyOyJ+VGIXWrcqPWxsuh6rNbti1XtqTaSqg2qV010rz1qunGOAxkGZPawvIzTbBPQfRt12kaEdMCZFj100TNJoJTRUZFxZlYceyq3um3jJeOP4QJVindDdtWfGKYNFBruF0LczMLTQ7Gpo2fbA7d/2yuDiVjo2Xabqe1ak70UCFtufEbLGls9KYKbWUtVG2yqMjerb6YM6x6vaq67SWmsrLqd7WEybGhbHVtdbHmcVocWVl+Y1jhDU+3YQgYSu4lsyKgs1GUL8Y6f6NOdV6Xo1Ezmc0w1kTmKGHYObnRdwPftjGtpc12Y2BtVWOKd+oV+T0223ejmlncQrVaE21Fl0z8JgUfm197UyLpH6/cU1VU0ZdWmqJQ5G5NxYxgu6uTvdntMNjcUFSOau8tONV3JcrV9BFHSTUEq2sRgmJ00S85sVK3JnolNjk4Zpk2Z0vz6ja3+rmSQhp1aL3WaPO0M+Wzk9IL1ak6W/clPff2potzZ9a9vekWWmALWB8LsEgvxosliXpduSC/v3jZHRiSGDrU5PUHtsDY5sJvMfvBLLNtpnCo+m1CTpYpVUPFA1ODfQYzcodP0zUm+CU6BeEtrjCcWdtGj129NxUigb8XVHU2QbnAriuhc5bvM2u4AN3ssoOSIUOohOOefvRFDa2L6gwqFGlz0VlCsdKXzhEzO6wZr8mFWCWxzVtLotJtFFEp2dRcutjA+kUeMcu1SvtW5Eht2s0JPxY326qRufD6iVr0K3ofssrFUgGjLljL6Srog6pXU96NlOnWSnH1tq2lEDbeh8IFNv5rOy4gqhJw1rQvyzPUlJODKhjSijBX3jtfOO3XhXltiYmZja1cvRo6TlXKYNiKl2fUpg+v6uXZur1nMpIqxT8M5mJXgfwwmFm2baseFoRQw6Yn7GDyaAE9r705oLUBzdNmRrAv3GF08VrFYvdpqWBliGu+bVA8t4Nz24V801XpLmT1OEo95m5ga0uSsvJ6jbdPwWDo0G+fDJ2jdhkNt6Suy3IgL/PWRKXFCYjpNzVN2X5mC8AbrmE2XZf8Rb9jwcnd1aKC22YnBIYLdbm+Yy22in1B1fUtyNboT0sUA28YZ9RqhB6ua06pVIhwdfUSoHmvMtd35Gaeq0qFaOGMrU+S8OXL6LyN7ra6qBP0OmVfKKAKePm6JLtat1NKVgtHdYoHhPTd1GXFVLCHwXSJwQgkjrEdrPeDDZZf+Bu2Q1AaHq7bGQJ93h4oaIPagThb0OgOHspmVaco0qLdtk534+aNppktI95m2bNnxjbHAmfPU+d//gNHYA==</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="Monk" full_name="Monk"/>
  <deprecated count="0"/>
</project>
